//-------------------------------------------------------
//Macro to generate drilling toolpaths for all type of dies.
//The user does not neeed to do anything, macro is responsible
//to recognize all type of holes.
//-------------------------------------------------------
//Written at 22/11/2021 for Matrex and Alumat
//A.K Matrex Cam Office Sindos

FUNCTION Main()  {
	UNDRAW STOCKMODEL ALL
	
	//Get tornitura as a list
	STRING LIST $TORNDATA = {}
	CALL GetTornitura($TORNDATA)

	//Get the working company
	STRING $COMPANY = ""
	CALL GetCompany($COMPANY)
	
	//Check if the die is porthole or flat
	BOOL $PORTHOLE = FALSE
	BOOL $FLAT = FALSE
	CALL GetDieType($TORNDATA , $PORTHOLE , $FLAT)
	
	//Check how many part the die has
	BOOL $TWOPARTS = FALSE
	BOOL $THREEPARTS = FALSE
	CALL GetPartsAmount($TORNDATA , $TWOPARTS , $THREEPARTS)
	
	//Check in flats which part is first
	BOOL $ALLARGATORE_FIRST = FALSE
	BOOL $PIANA_FIRST = FALSE
	IF $FLAT {
		CALL GetFirstPart($TORNDATA , $ALLARGATORE_FIRST , $PIANA_FIRST)
	}

	//Get which part of Die being programmed
	BOOL $MANDREL = FALSE
	BOOL $ALLARGATORE = FALSE
	BOOL $MATRICE = FALSE
	BOOL $PIANA = FALSE
	BOOL $TERZAPIASTRA = FALSE
	BOOL $SOTTOMATRICE = FALSE
	CALL GetDiePart($PORTHOLE , $FLAT , $MANDREL , $ALLARGATORE , $MATRICE , $PIANA , $TERZAPIASTRA , $SOTTOMATRICE)

	//Get Collarino existence
	BOOL $COLLARINO_CAMERA = FALSE
	BOOL $COLLARINO_SCARICO = FALSE
	CALL GetCollarino($TORNDATA , $COLLARINO_CAMERA , $COLLARINO_SCARICO)
	
	//Define the Process Pack by the Schematic
	//The definition comes by using the all above created values
	INT $PACK = 0
	CALL GetPack($PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST , $COLLARINO_CAMERA , $COLLARINO_SCARICO , $PACK)
	
	//Define the allign method of the die
	BOOL $MANUAL_ALLIGN = FALSE 
	BOOL $SPINE_ALLIGN = FALSE
	CALL GetAllign($TORNDATA , $PORTHOLE , $FLAT , $MANUAL_ALLIGN , $SPINE_ALLIGN)
	
	//Define the part height
	REAL $MATRICEHEIGHT = 0
	CALL GetMatriceHeight($TORNDATA , $PIANA_FIRST , $MATRICEHEIGHT)
	
	//Create Folders Tree on Hole Feature Set
	CALL CreateFolder($MANDREL , $ALLARGATORE , $MATRICE , $PIANA , $TERZAPIASTRA , $SOTTOMATRICE)
	
	//Define Workplanes
	STRING $WP_POZZETO = "PL POZZETTO"
	STRING $WP_SCARICO = "WP SCARICO"
	STRING $WP_USCITA = "WP_USCITA"
	CALL GetWorkplanes($MANDREL , $ALLARGATORE , $MATRICE , $PIANA , $TERZAPIASTRA , $SOTTOMATRICE , $WP_POZZETO , $WP_SCARICO , $WP_USCITA)
	
	//Centrino Creation
	CALL CreateCentrino($TORNDATA , $COMPANY , $TWOPARTS , $THREEPARTS , $MANDREL , $ALLARGATORE , $MATRICE , $PIANA , $TERZAPIASTRA , $SOTTOMATRICE , $ALLARGATORE_FIRST , $PIANA_FIRST , $WP_POZZETO , $WP_SCARICO , $WP_USCITA)

	//Hole Feature Sets Initialization
	CALL GetHoleFeatureSets($MANDREL , $ALLARGATORE , $MATRICE , $PIANA , $TERZAPIASTRA , $SOTTOMATRICE , $PIANA_FIRST , $TWOPARTS , $THREEPARTS , $COLLARINO_SCARICO , $PACK , $WP_POZZETO , $WP_SCARICO , $WP_USCITA )
	
	//Let the user know which holes found
	CALL HoleReport()
	
	//Hole Feature Sets Creation
	CALL CreateHoleFeatureComponentsAndToolpaths($COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST , $MANDREL , $ALLARGATORE , $MATRICE , $PIANA , $TERZAPIASTRA , $SOTTOMATRICE , $COLLARINO_CAMERA , $COLLARINO_SCARICO , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_POZZETO , $WP_SCARICO , $WP_USCITA)
	
	TEXTINFO ACCEPT
	MESSAGE INFO "Macro Finished"
}

//Read tornitura file as a String List
FUNCTION GetTornitura(OUTPUT STRING LIST $TORNDATA) {

	//Check if the TORNITURA variable in not clear and have 5 characters,
	//then read tornio file and save it on a list $TORNDATA
	IF $TORNITURA != '' AND $TORNITURA != "NULL" {
		IF LENGTH($TORNITURA) != 5 {
			MESSAGE ERROR "Tornitura is wrong or can't be found!" + CRLF + "System have read this: " + $TORNITURA
			RETURN
		}
	}
	STRING $DIRECTORY = "W:\cad\cam\tornio\"
	STRING $OPENFILE = "FILE OPEN " + $DIRECTORY + $TORNITURA + ".txt FOR READ AS TXTFILE"
	DOCOMMAND $OPENFILE
	FILE READ $TORNDATA FROM TXTFILE
	FILE CLOSE TXTFILE

}

//Define the Company between Matrex and Alumat
FUNCTION GetCompany(OUTPUT STRING $COMPANY) {

	//Record the company by checking if letter "M,m" exist on tornitura
	$COMPANY = SUBSTRING($TORNITURA,0,1)
	IF $COMPANY == "M" OR $COMPANY == "m" {
		$COMPANY = "Matrex"
	} ELSE {
		$COMPANY = "Alumat"
	}
	
	//Check if the tamplate is the right for the user tornitura
	BOOL $COMPANYMEETS = FALSE 
	IF ($TEMPLATE == "Matrex" AND $COMPANY == "Matrex") OR ($TEMPLATE == "Alumat" AND $COMPANY == "Alumat") {
		$COMPANYMEETS = TRUE
	}
	IF NOT $COMPANYMEETS {
		//Ask the user if agree
		STRING $CONTINUEORNOT = "Opened Template is not recognized for " + $COMPANY  + CRLF + "Die gonna be build for " + $COMPANY + "?"
		BOOL $COMPANYAGREE = FALSE
		$COMPANYAGREE = QUERY $CONTINUEORNOT

		//If the user not agree reverse the company
		IF NOT $COMPANYAGREE {
			IF $COMPANY == "Matrex" {
				$COMPANY = "Alumat"
			}
			IF $COMPANY == "Alumat" {
				$COMPANY = "Matrex"
			}
		}
	}

}

//Define the type of the die, either Porthole or Flat
FUNCTION GetDieType(STRING LIST $TORNDATA , OUTPUT BOOL $PORTHOLE , OUTPUT BOOL $FLAT) {
	
	STRING $DIETYPE = SUBSTRING($TORNDATA[1],17,5)
	IF $DIETYPE == "PORTH" {
		$PORTHOLE = TRUE
	}
	IF $DIETYPE == "PIANA" {
		$FLAT = TRUE
	}
	
}

//Define how many parts the die has, 2 or 3
FUNCTION GetPartsAmount(STRING LIST $TORNDATA , OUTPUT BOOL $TWOPARTS , OUTPUT BOOL $THREEPARTS) {
	
	INT $PARTCODE = SUBSTRING($TORNDATA[5],5,2)
	IF $PARTCODE {
		$THREEPARTS = TRUE
	} ELSE {
		$TWOPARTS = TRUE
	}
	
}

//When it's flat find out which part is first, either piana or allargatore
FUNCTION GetFirstPart(STRING LIST $TORNDATA , OUTPUT BOOL $ALLARGATORE_FIRST , OUTPUT BOOL $PIANA_FIRST) {
	
	INT $TIPO = SUBSTRING($TORNDATA[2],5,1)
	IF $TIPO == 3 OR $TIPO == 4 {
		$ALLARGATORE_FIRST = TRUE
	} ELSEIF $TIPO == 6 {
		$PIANA_FIRST = TRUE
	} ELSE {
		MESSAGE ERROR "Tornitura format seems to be wrong"
	}
	
}

//Define which part being programmed, mandrel, allargatore, matrice etc
FUNCTION GetDiePart(BOOL $PORTHOLE , BOOL $FLAT ,OUTPUT BOOL $MANDREL , OUTPUT BOOL $ALLARGATORE , OUTPUT BOOL $MATRICE , OUTPUT BOOL $PIANA , OUTPUT BOOL $TERZAPIASTRA , OUTPUT BOOL $SOTTOMATRICE) {

	//Search in Levels and Sets for Solid Layers to compare
	FOREACH LAYER IN FOLDER('LEVEL') {
		IF LAYER.NAME == "264" {
			IF $PORTHOLE {
				$MANDREL = TRUE
			} ELSE {
				$ALLARGATORE = TRUE
			}
			BREAK
		} ELSEIF LAYER.NAME == "20" {
			IF $PORTHOLE {
				$MATRICE = TRUE
			} ELSE {
				$PIANA = TRUE
			}
			BREAK
		} ELSEIF LAYER.NAME == "170" {
			IF $PORTHOLE {
				$TERZAPIASTRA = TRUE
			} ELSE {
				$SOTTOMATRICE = TRUE
			}
			BREAK
		} ELSE {
			CONTINUE
		}
	}

}

//Define for all sides if it is with collarino or not
FUNCTION GetCollarino(STRING LIST $TORNDATA , OUTPUT BOOL $COLLARINO_CAMERA , OUTPUT BOOL $COLLARINO_SCARICO) {

	//Pick collarino diameter depending on tipo
	//When TIPO is 1,2,3,4 the Matrice is second part
	//When TIPO is 6 the Matrice is first part, so it has only collarino in scarico
	INT $TIPO = SUBSTRING($TORNDATA[2],5,1)
	REAL $COLLARINO_CAMERA_DIAMETER = 0
	REAL $COLLARINO_SCARICO_DIAMETER = 0
	IF $TIPO == 1 OR $TIPO == 2 OR $TIPO == 3 OR $TIPO == 4 {
		$COLLARINO_CAMERA_DIAMETER = SUBSTRING($TORNDATA[37],5,5)
		$COLLARINO_SCARICO_DIAMETER = SUBSTRING($TORNDATA[40],5,5)
	} ELSEIF $TIPO == 6 {
		$COLLARINO_SCARICO_DIAMETER = SUBSTRING($TORNDATA[12],5,5)
	} ELSE {
		MESSAGE ERROR "Tornitura format seems to be wrong"
		MACRO ABORT
	}
	
	//if diameter value exist, then collarino exist
	IF $COLLARINO_CAMERA_DIAMETER {
		$COLLARINO_CAMERA = TRUE
	}
	IF $COLLARINO_SCARICO_DIAMETER {
		$COLLARINO_SCARICO = TRUE
	}
	
}

//Mapping by the Schematic, define a number for every case
FUNCTION GetPack(BOOL $PORTHOLE , BOOL $FLAT , BOOL $TWOPARTS , BOOL $THREEPARTS , BOOL $ALLARGATORE_FIRST , BOOL $PIANA_FIRST , BOOL $COLLARINO_CAMERA , BOOL $COLLARINO_SCARICO , OUTPUT INT $PACK) {
	
	//Whichever condition is true defines the pack
	IF $PORTHOLE AND $TWOPARTS {
		$PACK = 1
	} ELSEIF $PORTHOLE AND $THREEPARTS AND NOT $COLLARINO_SCARICO {
		$PACK = 2
	} ELSEIF $PORTHOLE AND $THREEPARTS AND $COLLARINO_SCARICO {
		$PACK = 3
	} ELSEIF $FLAT AND $TWOPARTS AND NOT $COLLARINO_CAMERA AND $ALLARGATORE_FIRST {
		$PACK = 4
	} ELSEIF $FLAT AND $TWOPARTS AND NOT $COLLARINO_SCARICO AND $PIANA_FIRST {
		$PACK = 5
	} ELSEIF $FLAT AND $TWOPARTS AND $COLLARINO_CAMERA AND $ALLARGATORE_FIRST {
		$PACK = 6
	} ELSEIF $FLAT AND $TWOPARTS AND $COLLARINO_SCARICO AND $PIANA_FIRST {
		$PACK = 7
	} ELSEIF $FLAT AND $THREEPARTS AND NOT $COLLARINO_CAMERA AND NOT $COLLARINO_SCARICO {
		$PACK = 8
	} ELSEIF $FLAT AND $THREEPARTS AND $COLLARINO_CAMERA AND NOT $COLLARINO_SCARICO {
		$PACK = 9
	} ELSEIF $FLAT AND $THREEPARTS AND NOT $COLLARINO_CAMERA AND $COLLARINO_SCARICO {
		$PACK = 10
	} ELSEIF $FLAT AND $THREEPARTS AND $COLLARINO_CAMERA AND $COLLARINO_SCARICO {
		$PACK = 11
	} ELSE {
		MESSAGE ERROR "Unable to define the Pack by the Schematic"
	}

}

//Define which allign method gonna be used for erosion
FUNCTION GetAllign(STRING LIST $TORNDATA, BOOL $PORTHOLE , BOOL $FLAT , OUTPUT BOOL $MANUAL_ALLIGN , OUTPUT BOOL $SPINE_ALLIGN) {
	
	REAL $DIEDIAMETER = SUBSTRING($TORNDATA[7],5,5)
	IF $DIEDIAMETER < 350 {
		$MANUAL_ALLIGN = TRUE
	} ELSEIF $DIEDIAMETER >= 350 {
		$SPINE_ALLIGN = TRUE
	} ELSE {
		MESSAGE ERROR "Tornitura format seems to be wrong"
	}
	
}

//Define Matrice Height because is the only part with variable hole depths
FUNCTION GetMatriceHeight(STRING LIST $TORNDATA , BOOL $PIANA_FIRST , OUTPUT REAL $MATRICEHEIGHT ) {
	
	//Read matrice height, as it is, in the Torniture file
	IF $PIANA_FIRST {
		$MATRICEHEIGHT = SUBSTRING($TORNDATA[19],5,5)
	} ELSE {
		$MATRICEHEIGHT = SUBSTRING($TORNDATA[34],5,5)
	}
	
	//Adjust the value to integer
	REAL $DIAMETER = SUBSTRING($TORNDATA[7],5,5)
	IF $DIAMETER <= 389 {
		$MATRICEHEIGHT = $MATRICEHEIGHT - 0.6
	} ELSEIF $DIAMETER >= 390 AND $DIAMETER <= 449 {
		$MATRICEHEIGHT = $MATRICEHEIGHT - 0.7
	} ELSE {
		$MATRICEHEIGHT = $MATRICEHEIGHT - 0.8
	}
	
}

//Create the folders for corresponding part
FUNCTION CreateFolder(BOOL $MANDREL , BOOL $ALLARGATORE , BOOL $MATRICE , BOOL $PIANA , BOOL $TERZAPIASTRA , BOOL $SOTTOMATRICE) {

	//Create a new folder tree depending on 
	//which part of die is on the program
	IF FOLDER_EXISTS("Featureset\STANDARD_HOLES") {
		DELETE FEATURESET FOLDER "Featureset\STANDARD_HOLES"
	}
	CREATE FOLDER "Featureset" "STANDARD_HOLES"
	IF $MANDREL OR $ALLARGATORE {
		//SubFolders
		CREATE FOLDER "Featureset\STANDARD_HOLES" "ENTRATA"
		CREATE FOLDER "Featureset\STANDARD_HOLES" "POZZETO"
	} ELSEIF $MATRICE OR $PIANA {
		//SubFolders
		CREATE FOLDER "Featureset\STANDARD_HOLES" "CAMERA"
		CREATE FOLDER "Featureset\STANDARD_HOLES" "SCARICO"
	} ELSEIF $TERZAPIASTRA OR $SOTTOMATRICE {
		//SubFolders
		CREATE FOLDER "Featureset\STANDARD_HOLES" "IMPRONTA"
		CREATE FOLDER "Featureset\STANDARD_HOLES" "USCITA"
	} ELSE {
		MESSAGE ERROR "There's not specified part of Die"
	}

}

///Define the workplane
FUNCTION GetWorkplanes(BOOL $MANDREL , BOOL $ALLARGATORE , BOOL $MATRICE , BOOL $PIANA , BOOL $TERZAPIASTRA , BOOL $SOTTOMATRICE , OUTPUT STRING $WP_POZZETO , OUTPUT STRING $WP_SCARICO , OUTPUT STRING $WP_USCITA) {
	IF $MANDREL OR $ALLARGATORE {
		//Workplane for Pozzeto Side
		IF NOT ENTITY_EXISTS('Workplane', "PL POZZETTO") {
			MESSAGE INFO "Workplane <PL POZZETO> does not exist" + CRLF + "Select a Workplane from the next list"
			$WP_POZZETO = INPUT ENTITY WORKPLANE "Select Workplane for Pozzetto Holes:"
		}
	} ELSEIF $MATRICE OR $PIANA {
		//Workplane for Scarico Side
		IF NOT ENTITY_EXISTS('Workplane', "WP SCARICO") {
			MESSAGE INFO "Workplane <WP SCARICO> does not exist" + CRLF + "Select a Workplane from the next list"
			$WP_SCARICO = INPUT ENTITY WORKPLANE "Select Workplane for Pozzetto Holes:"
		}
	} ELSEIF $TERZAPIASTRA OR $SOTTOMATRICE {
		//Workplane for Uscita Side
		IF NOT ENTITY_EXISTS('Workplane', "WP USCITA") {
			MESSAGE INFO "Workplane <WP USCITA> does not exist" + CRLF + "Select a Workplane from the next list"
			$WP_USCITA = INPUT ENTITY WORKPLANE "Select Workplane for Pozzetto Holes:"
		}
	} ELSE {
		MESSAGE ERROR "There's not specified part of Die"
	}
	DEACTIVATE Workplane
	DEACTIVATE Featureset
	DIALOGS MESSAGE ON
	DIALOGS ERROR ON
}

//Generate centrino toolpaths
FUNCTION CreateCentrino(STRING LIST $TORNDATA , STRING $COMPANY , BOOL $TWOPARTS , BOOL $THREEPARTS , BOOL $MANDREL , BOOL $ALLARGATORE , BOOL $MATRICE , BOOL $PIANA , BOOL $TERZAPIASTRA , BOOL $SOTTOMATRICE , BOOL $ALLARGATORE_FIRST , BOOL $PIANA_FIRST , STRING $WP_POZZETO , STRING $WP_SCARICO , STRING $WP_USCITA) {
	
	//Define Variables depending on the piece and Call the corresponding Function
	IF $MANDREL {
		//Diamater from battuta
		REAL $DIAMETER = SUBSTRING($TORNDATA[23] , 5 , 5)
		IF $DIAMETER == 0 {
			//Diameter from inclination
			$DIAMETER = SUBSTRING($TORNDATA[25] , 5 , 5)
			IF $DIAMETER == 0 {
				//Diameter total
				$DIAMETER = SUBSTRING($TORNDATA[7] , 5 , 5)
			}
		}
		CALL CENTRINO_MANDREL($COMPANY , $DIAMETER)
	} ELSEIF $ALLARGATORE {
		//Piece Code
		INT $PIECECODE = SUBSTRING($TORNDATA[3] , 5 , 1)
		//Diameter and Height total
		REAL $DIAMETER = SUBSTRING($TORNDATA[7] , 5 , 5)
		REAL $HEIGHT = 0
		IF $PIECECODE == 7 {
			//Diameter and Height Collarino
			$DIAMETER = SUBSTRING($TORNDATA[12] , 5 , 5)
			$HEIGHT = SUBSTRING($TORNDATA[13] , 5 , 5)
		}
		IF $PIECECODE == 6 {
			$DIAMETER = SUBSTRING($TORNDATA[12] , 5 , 5)
		}
		CALL CENTRINO_ALLARGATORE($COMPANY , $DIAMETER , $HEIGHT , $PIECECODE , $WP_POZZETO)
	} ELSEIF $MATRICE {
		//Piece Code
		INT $PIECECODE = SUBSTRING($TORNDATA[4] , 5 , 2)
		//Diameter and Height total
		REAL $DIAMETER = SUBSTRING($TORNDATA[7] , 5 , 5)
		REAL $HEIGHT = 0
		IF $PIECECODE == 22 OR $PIECECODE == 23 OR $PIECECODE == 27 {
			//Diameter and Height Collarino
			$DIAMETER = SUBSTRING($TORNDATA[40] , 5 , 5)
		}
		IF $PIECECODE == 24 OR $PIECECODE == 26 OR $PIECECODE == 28 {
			//Diameter and Height Collarino
			$DIAMETER = SUBSTRING($TORNDATA[40] , 5 , 5)
			$HEIGHT = SUBSTRING($TORNDATA[39] , 5 , 5)
		}
		CALL CENTRINO_MATRICE($COMPANY , $TWOPARTS , $THREEPARTS , $DIAMETER , $HEIGHT , $PIECECODE , $WP_SCARICO)
	} ELSEIF $PIANA {
		//Piece Code
		INT $PIECECODE = 0
		//Diameter and Height total
		REAL $DIAMETER = SUBSTRING($TORNDATA[7] , 5 , 5)
		REAL $HEIGHT = 0
		IF $PIANA_FIRST {
			$PIECECODE = SUBSTRING($TORNDATA[3] , 5 , 1)
			IF $PIECECODE == 7 {
				//Diameter and Height Female Collarino
				$DIAMETER = SUBSTRING($TORNDATA[12] , 5 , 5)
				$HEIGHT = SUBSTRING($TORNDATA[13] , 5 , 5)
			}
			IF $PIECECODE == 6 {
				//Diameter Male Collarino
				$DIAMETER = SUBSTRING($TORNDATA[12] , 5 , 5)
			}
		} ELSE {
			$PIECECODE = SUBSTRING($TORNDATA[4] , 5 , 2)
			IF $PIECECODE == 22 OR $PIECECODE == 23 OR $PIECECODE == 27 {
				$DIAMETER = SUBSTRING($TORNDATA[40] , 5 , 5)
			}
			IF $PIECECODE == 24 OR $PIECECODE == 26 OR $PIECECODE == 28 {
				$DIAMETER = SUBSTRING($TORNDATA[40] , 5 , 5)
				$HEIGHT = SUBSTRING($TORNDATA[39] , 5 , 5)
			}
		}
		CALL CENTRINO_PIANA($COMPANY , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST , $DIAMETER , $HEIGHT , $PIECECODE , $WP_SCARICO)
	} ELSEIF $TERZAPIASTRA {
		
	} ELSEIF $SOTTOMATRICE {
		
	} ELSE {
		
	}
	
}

//Generate hole feature set for all cases
FUNCTION GetHoleFeatureSets(BOOL $MANDREL , BOOL $ALLARGATORE , BOOL $MATRICE , BOOL $PIANA , BOOL $TERZAPIASTRA , BOOL $SOTTOMATRICE , BOOL $PIANA_FIRST , BOOL $TWOPARTS , BOOL $THREEPARTS , BOOL $COLLARINO_SCARICO , INT $PACK , STRING $WP_POZZETO , STRING $WP_SCARICO , STRING $WP_USCITA) {
	
	//Delete previous and create new basic folders to fill
	//Create simultaneously hole feature sets and fill them
	//Main Folder
	DIALOGS MESSAGE OFF
	DIALOGS ERROR OFF
	IF $MANDREL OR $ALLARGATORE {
		//Create Hole Feature Sets POZZETTO Side but first check if the right workplane exist
		ACTIVATE WORKPLANE $WP_POZZETO
		CALL InitializeSpinePozzetoSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeSpinonePozzetoSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeVitiPozzetoSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeSollevatorePozzetoSet($TWOPARTS , $THREEPARTS , $PACK)
	} ELSEIF $MATRICE OR $PIANA {
		//Create Hole Feature Sets CAMERA Side
		DEACTIVATE Workplane
		IF NOT $PIANA_FIRST {
			CALL InitializeSpineCameraSet($TWOPARTS , $THREEPARTS , $PACK)
			CALL InitializeSpinoneCameraSet($TWOPARTS , $THREEPARTS , $PACK)
			CALL InitializeVitiCameraSet($TWOPARTS , $THREEPARTS , $PACK)
			CALL InitializeEstrattoreCameraSet($TWOPARTS , $THREEPARTS , $PACK)
		}
		
		//Create Hole Feature Sets SCARICO Side but first check if the right workplane exist
		ACTIVATE WORKPLANE $WP_SCARICO
		CALL InitializeSpineScaricoSet($TWOPARTS , $THREEPARTS , $COLLARINO_SCARICO , $PACK)
		CALL InitializeSpinoneScaricoSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeVitiScaricoSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeEstrattoreScaricoSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeSollevatoreScaricoSet($TWOPARTS , $THREEPARTS , $PACK)
	} ELSEIF $TERZAPIASTRA OR $SOTTOMATRICE {
		//Create Hole Feature Sets IMPRONTA Side
		DEACTIVATE Workplane
		CALL InitializeSpineImprontaSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeSpinoneImprontaSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeVitiImprontaSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeEstrattoreImprontaSet($TWOPARTS , $THREEPARTS , $PACK)
		
		//Create Hole Feature Sets USCITA Side but first check if the right workplane exist
		ACTIVATE WORKPLANE $WP_USCITA
		CALL InitializeSpineUscitaSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeSpinoneUscitaSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeVitiUscitaSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeEstrattoreUscitaSet($TWOPARTS , $THREEPARTS , $PACK)
		CALL InitializeSollevatoreUscitaSet($TWOPARTS , $THREEPARTS , $PACK)
	} ELSE {
		MESSAGE ERROR "There's not specified part of Die"
	}
	DEACTIVATE Workplane
	DEACTIVATE Featureset
	DIALOGS MESSAGE ON
	DIALOGS ERROR ON
	
}

//Give feedback to user
FUNCTION HoleReport() {
	
	//Which feature set have holes
	//Fill a list with featuresets which got components
	STRING LIST $FOUNDSETS = {}
	STRING $SETNAME = ""
	STRING $REPORT = ""
	BOOL $SPINEEXIST = FALSE
	STRING $SPINENAME = ""
	FOREACH HOLESET IN FOLDER('Featureset\STANDARD_HOLES') {
		$SETNAME = HOLESET.NAME
		IF  SIZE(COMPONENTS(ENTITY('Featureset' , $SETNAME))) {
			INT ADD = ADD_LAST($FOUNDSETS, $SETNAME)
		}
	}
	
	//Create report string
	FOREACH SET IN FOUNDSETS {
		IF SET != "CENTERING_HOLES" {
			$REPORT = $REPORT + SET + CRLF
		}
		IF SUBSTRING(SET,0,5) == "SPINE" {
			$SPINEEXIST = TRUE
			$SPINENAME = SET
		}
	}	
	
	//Ask the user if the report is fine
	STRING $CONTINUEORNOT = "The following Feature Sets found:" + CRLF + $REPORT + CRLF + "[Yes] to continue / [No] if something missing"
	BOOL $REPORTANSWER = FALSE
	$REPORTANSWER = QUERY $CONTINUEORNOT
	IF NOT $REPORTANSWER {
		MESSAGE INFO "Macro aborted"
		MACRO ABORT
	}
	
	//Check spine coordinates
	//Check if spine x,y in absolute are equal
	IF $SPINEEXIST {
		ACTIVATE Featureset $SPINENAME
		//XPOS contains all the x positions of all the components of the activated feature set
		//YPOS contains all the y positions of all the components of the activated feature set
		REAL LIST XPOS = extract($components(entity('featureset','')),'WPPoint[0]')
		REAL LIST YPOS = extract($components(entity('featureset','')),'WPPoint[1]')
		
		//POS[0] is for the first hole, POS[1] is for the second hole
		IF (ABS(XPOS[0]) == ABS(XPOS[1])) AND (ABS(YPOS[0]) == ABS(YPOS[1])) {
			MESSAGE ERROR "Spine coordinates are equal in absolute" + CRLF + "This operation is wrong, fix it with CAD"
			MESSAGE INFO "Macro Aborted"
			MACRO ABORT
		}
	}
	
}

//Generate toolpaths for founding holes
FUNCTION CreateHoleFeatureComponentsAndToolpaths(STRING $COMPANY , BOOL $PORTHOLE , BOOL $FLAT , BOOL $TWOPARTS , BOOL $THREEPARTS , BOOL $ALLARGATORE_FIRST , BOOL $PIANA_FIRST , BOOL $MANDREL , BOOL $ALLARGATORE , BOOL $MATRICE , BOOL $PIANA , BOOL $TERZAPIASTRA , BOOL $SOTTOMATRICE , BOOL $COLLARINO_CAMERA , BOOL $COLLARINO_SCARICO ,  BOOL $MANUAL_ALLIGN , BOOL $SPINE_ALLIGN , REAL $MATRICEHEIGHT , STRING $WP_POZZETO , STRING $WP_SCARICO , STRING $WP_USCITA) {

	//Loop on Hole Feature Sets
	STRING $SETNAME = ""
	STRING $COMPONENTNAME = ""
	REAL $COMPONENTDIAMETER = 0
	REAL $COMPONENTDIAMETERCAMERA = 0
	BOOL $SPINE_DIFFER = FALSE
	FOREACH HOLESET IN FOLDER('Featureset\STANDARD_HOLES') {
		//Variables to add all the found sizes on a list to let the program know which toolpaths to call
		STRING LIST $SIZES = {}
		INT $D6_INDEX = 0
		INT $D8_INDEX = 0
		INT $D10_INDEX = 0
		INT $D12_INDEX = 0
		INT $D14_INDEX = 0
		INT $D16_INDEX = 0
		INT $D20_INDEX = 0
		INT $D24_INDEX = 0
		INT $D30_INDEX = 0
		INT $D40_INDEX = 0
		INT $D12IN_INDEX = 0
		INT $D58IN_INDEX = 0
		INT $D34IN_INDEX = 0
		INT $D78IN_INDEX = 0
		INT $D1IN_INDEX = 0
		//Read Hole Feature Set name in STANDARD_HOLES Folder
		$SETNAME = HOLESET.NAME
		ACTIVATE Featureset $SETNAME
		//If the Hole Feature Set is clear then delete it continue to the next set
		IF  NOT SIZE(COMPONENTS(ENTITY('Featureset' , $SETNAME))) {
			DELETE FEATURESET $SETNAME
			CONTINUE
		}
		
		//If the Hole Feature Set got components then give them the right struct
		//The Switch statement checks only for mandrel and allargatore
		IF $MANDREL OR $ALLARGATORE {		
			SWITCH $SETNAME {
				CASE "SPINE_POZZETO"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SPINE_POZZETO_D10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SPINE_POZZETO_D12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL SPINE_POZZETO_D14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SPINE_POZZETO_D16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SPINE_POZZETO_D20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SPINE_POZZETO_D24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SPINE_POZZETO_D30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 40
								IF NOT $D40_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D40")
								}
								$D40_INDEX = $D40_INDEX + 1
								CALL SPINE_POZZETO_D40_FEATURE($SETNAME , $COMPONENTNAME , $D40_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL SPINE_POZZETO_D10_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D12"
								CALL SPINE_POZZETO_D12_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D14"
								CALL SPINE_POZZETO_D14_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D16"
								CALL SPINE_POZZETO_D16_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D20"
								CALL SPINE_POZZETO_D20_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D24"
								CALL SPINE_POZZETO_D24_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D30"
								CALL SPINE_POZZETO_D30_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D40"
								CALL SPINE_POZZETO_D40_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "SPINONE_POZZETO"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 6
								IF NOT $D6_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D6")
								}
								$D6_INDEX = $D6_INDEX + 1
								CALL SPINONE_POZZETO_D6_FEATURE($SETNAME , $COMPONENTNAME , $D6_INDEX)
							BREAK
							CASE 8
								IF NOT $D8_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D8")
								}
								$D8_INDEX = $D8_INDEX + 1
								CALL SPINONE_POZZETO_D8_FEATURE($SETNAME , $COMPONENTNAME , $D8_INDEX)
							BREAK
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SPINONE_POZZETO_D10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SPINONE_POZZETO_D12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL SPINONE_POZZETO_D14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SPINONE_POZZETO_D16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SPINONE_POZZETO_D20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SPINONE_POZZETO_D24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SPINONE_POZZETO_D30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 40
								IF NOT $D40_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D40")
								}
								$D40_INDEX = $D40_INDEX + 1
								CALL SPINONE_POZZETO_D40_FEATURE($SETNAME , $COMPONENTNAME , $D40_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D6"
								CALL SPINONE_POZZETO_D6_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D8"
								CALL SPINONE_POZZETO_D8_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D10"
								CALL SPINONE_POZZETO_D10_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D12"
								CALL SPINONE_POZZETO_D12_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D14"
								CALL SPINONE_POZZETO_D14_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D16"
								CALL SPINONE_POZZETO_D16_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D20"
								CALL SPINONE_POZZETO_D20_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D24"
								CALL SPINONE_POZZETO_D24_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D30"
								CALL SPINONE_POZZETO_D30_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D40"
								CALL SPINONE_POZZETO_D40_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "VITI_POZZETO"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL VITI_POZZETO_M10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL VITI_POZZETO_M12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL VITI_POZZETO_M16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL VITI_POZZETO_M20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL VITI_POZZETO_M24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL VITI_POZZETO_M30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL VITI_POZZETO_12IN_FEATURE($SETNAME , $COMPONENTNAME , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL VITI_POZZETO_58IN_FEATURE($SETNAME , $COMPONENTNAME , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL VITI_POZZETO_34IN_FEATURE($SETNAME , $COMPONENTNAME , $D37IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL VITI_POZZETO_78IN_FEATURE($SETNAME , $COMPONENTNAME , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL VITI_POZZETO_1IN_FEATURE($SETNAME , $COMPONENTNAME , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL VITI_POZZETO_D10_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D12"
								CALL VITI_POZZETO_D12_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D16"
								CALL VITI_POZZETO_D16_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D20"
								CALL VITI_POZZETO_D20_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D24"
								CALL VITI_POZZETO_D24_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D30"
								CALL VITI_POZZETO_D30_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D40"
								CALL VITI_POZZETO_D40_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D12IN"
								CALL VITI_POZZETO_D12IN_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D58IN"
								CALL VITI_POZZETO_D58IN_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D34IN"
								CALL VITI_POZZETO_D34IN_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D78IN"
								CALL VITI_POZZETO_D78IN_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D1IN"
								CALL VITI_POZZETO_D1IN_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "SOLLEVATORE_POZZETO"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SOLLEVATORE_POZZETO_M10($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SOLLEVATORE_POZZETO_M12($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SOLLEVATORE_POZZETO_M16($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SOLLEVATORE_POZZETO_M20($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SOLLEVATORE_POZZETO_M24($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SOLLEVATORE_POZZETO_M30($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL SOLLEVATORE_POZZETO_12IN($SETNAME , $COMPONENTNAME , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL SOLLEVATORE_POZZETO_58IN($SETNAME , $COMPONENTNAME , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL SOLLEVATORE_POZZETO_34IN($SETNAME , $COMPONENTNAME , $D34IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL SOLLEVATORE_POZZETO_78IN($SETNAME , $COMPONENTNAME , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL SOLLEVATORE_POZZETO_1IN($SETNAME , $COMPONENTNAME , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL SOLLEVATORE_POZZETO_D10_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D12"
								CALL SOLLEVATORE_POZZETO_D12_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D16"
								CALL SOLLEVATORE_POZZETO_D16_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D20"
								CALL SOLLEVATORE_POZZETO_D20_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D24"
								CALL SOLLEVATORE_POZZETO_D24_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D30"
								CALL SOLLEVATORE_POZZETO_D30_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D40"
								CALL SOLLEVATORE_POZZETO_D40_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D12IN"
								CALL SOLLEVATORE_POZZETO_D12IN_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D58IN"
								CALL SOLLEVATORE_POZZETO_D58IN_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D34IN"
								CALL SOLLEVATORE_POZZETO_D34IN_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D78IN"
								CALL SOLLEVATORE_POZZETO_D78IN_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							CASE "D1IN"
								CALL SOLLEVATORE_POZZETO_D1IN_TEMPLATE($SETNAME , $COMPANY , $MANDREL , $ALLARGATORE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_POZZETO)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				DEFAULT			
				BREAK
			}
			//If the Hole Feature Set got components then give them the right struct
			//The Switch statement checks only for matrice and piana
		} ELSEIF $MATRICE OR $PIANA {
			SWITCH $SETNAME {
				//Hole Feature Set
				CASE "SPINE_CAMERA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						$COMPONENTDIAMETERCAMERA = $COMPONENTDIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SPINE_CAMERA_D10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SPINE_CAMERA_D12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL SPINE_CAMERA_D14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SPINE_CAMERA_D16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SPINE_CAMERA_D20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SPINE_CAMERA_D24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SPINE_CAMERA_D30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 40
								IF NOT $D40_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D40")
								}
								$D40_INDEX = $D40_INDEX + 1
								CALL SPINE_CAMERA_D40_FEATURE($SETNAME , $COMPONENTNAME , $D40_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL SPINE_CAMERA_D10_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $ALLARGATORE_FIRST , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D12"
								CALL SPINE_CAMERA_D12_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $ALLARGATORE_FIRST , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D14"
								CALL SPINE_CAMERA_D14_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $ALLARGATORE_FIRST , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D16"
								CALL SPINE_CAMERA_D16_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $ALLARGATORE_FIRST , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D20"
								CALL SPINE_CAMERA_D20_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $ALLARGATORE_FIRST , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D24"
								CALL SPINE_CAMERA_D24_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $ALLARGATORE_FIRST , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D30"
								CALL SPINE_CAMERA_D30_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $ALLARGATORE_FIRST , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D40"
								CALL SPINE_CAMERA_D40_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $ALLARGATORE_FIRST , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				//Hole Feature Set
				CASE "SPINONE_CAMERA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 6
								IF NOT $D6_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D6")
								}
								$D6_INDEX = $D6_INDEX + 1
								CALL SPINONE_CAMERA_D6_FEATURE($SETNAME , $COMPONENTNAME , $D6_INDEX)
							BREAK
							CASE 8
								IF NOT $D8_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D8")
								}
								$D8_INDEX = $D8_INDEX + 1
								CALL SPINONE_CAMERA_D8_FEATURE($SETNAME , $COMPONENTNAME , $D8_INDEX)
							BREAK
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SPINONE_CAMERA_D10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SPINONE_CAMERA_D12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL SPINONE_CAMERA_D14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SPINONE_CAMERA_D16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SPINONE_CAMERA_D20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SPINONE_CAMERA_D24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SPINONE_CAMERA_D30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 40
								IF NOT $D40_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D40")
								}
								$D40_INDEX = $D40_INDEX + 1
								CALL SPINONE_CAMERA_D40_FEATURE($SETNAME , $COMPONENTNAME , $D40_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D6"
								CALL SPINONE_CAMERA_D6_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D8"
								CALL SPINONE_CAMERA_D8_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D10"
								CALL SPINONE_CAMERA_D10_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D12"
								CALL SPINONE_CAMERA_D12_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D14"
								CALL SPINONE_CAMERA_D14_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D16"
								CALL SPINONE_CAMERA_D16_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D20"
								CALL SPINONE_CAMERA_D20_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D24"
								CALL SPINONE_CAMERA_D24_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D30"
								CALL SPINONE_CAMERA_D30_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D40"
								CALL SPINONE_CAMERA_D40_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				//Hole Feature Set
				CASE "VITI_CAMERA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL VITI_CAMERA_M10_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL VITI_CAMERA_M12_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D12_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL VITI_CAMERA_M16_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL VITI_CAMERA_M20_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL VITI_CAMERA_M24_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL VITI_CAMERA_M30_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL VITI_CAMERA_12IN_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL VITI_CAMERA_58IN_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL VITI_CAMERA_34IN_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D37IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL VITI_CAMERA_78IN_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL VITI_CAMERA_1IN_FEATURE($SETNAME , $COMPONENTNAME , $MATRICEHEIGHT , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL VITI_CAMERA_D10_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D12"
								CALL VITI_CAMERA_D12_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D16"
								CALL VITI_CAMERA_D16_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D20"
								CALL VITI_CAMERA_D20_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D24"
								CALL VITI_CAMERA_D24_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D30"
								CALL VITI_CAMERA_D30_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D40"
								CALL VITI_CAMERA_D40_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D12IN"
								CALL VITI_CAMERA_D12IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D58IN"
								CALL VITI_CAMERA_D58IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D34IN"
								CALL VITI_CAMERA_D34IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D78IN"
								CALL VITI_CAMERA_D78IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							CASE "D1IN"
								CALL VITI_CAMERA_D1IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				//Hole Feature Set
				CASE "ESTRATTORE_CAMERA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL ESTRATTORE_CAMERA_M10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL ESTRATTORE_CAMERA_M12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL ESTRATTORE_CAMERA_M14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL ESTRATTORE_CAMERA_M16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL ESTRATTORE_CAMERA_M20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL ESTRATTORE_CAMERA_M24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL ESTRATTORE_CAMERA_M30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL ESTRATTORE_CAMERA_12IN_FEATURE($SETNAME , $COMPONENTNAME , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL ESTRATTORE_CAMERA_58IN_FEATURE($SETNAME , $COMPONENTNAME , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL ESTRATTORE_CAMERA_34IN_FEATURE($SETNAME , $COMPONENTNAME , $D37IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL ESTRATTORE_CAMERA_78IN_FEATURE($SETNAME , $COMPONENTNAME , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL ESTRATTORE_CAMERA_1IN_FEATURE($SETNAME , $COMPONENTNAME , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL ESTRATTORE_CAMERA_D10_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D12"
								CALL ESTRATTORE_CAMERA_D12_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D14"
								CALL ESTRATTORE_CAMERA_D14_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D16"
								CALL ESTRATTORE_CAMERA_D16_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D20"
								CALL ESTRATTORE_CAMERA_D20_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D24"
								CALL ESTRATTORE_CAMERA_D24_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D30"
								CALL ESTRATTORE_CAMERA_D30_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D40"
								CALL ESTRATTORE_CAMERA_D40_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D12IN"
								CALL ESTRATTORE_CAMERA_D12IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D58IN"
								CALL ESTRATTORE_CAMERA_D58IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D34IN"
								CALL ESTRATTORE_CAMERA_D34IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D78IN"
								CALL ESTRATTORE_CAMERA_D78IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D1IN"
								CALL ESTRATTORE_CAMERA_D1IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				//Hole Feature Set
				CASE "SPINE_SCARICO"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
					IF $COMPONENTDIAMETER != $COMPONENTDIAMETERCAMERA {
						$SPINE_DIFFER = TRUE
					}
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SPINE_SCARICO_D10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SPINE_SCARICO_D12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL SPINE_SCARICO_D14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SPINE_SCARICO_D16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SPINE_SCARICO_D20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SPINE_SCARICO_D24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SPINE_SCARICO_D30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 40
								IF NOT $D40_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D40")
								}
								$D40_INDEX = $D40_INDEX + 1
								CALL SPINE_SCARICO_D40_FEATURE($SETNAME , $COMPONENTNAME , $D40_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL SPINE_SCARICO_D10_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO , $SPINE_DIFFER)
							BREAK
							CASE "D12"
								CALL SPINE_SCARICO_D12_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO , $SPINE_DIFFER)
							BREAK
							CASE "D14"
								CALL SPINE_SCARICO_D14_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO , $SPINE_DIFFER)
							BREAK
							CASE "D16"
								CALL SPINE_SCARICO_D16_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO , $SPINE_DIFFER)
							BREAK
							CASE "D20"
								CALL SPINE_SCARICO_D20_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO , $SPINE_DIFFER)
							BREAK
							CASE "D24"
								CALL SPINE_SCARICO_D24_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO , $SPINE_DIFFER)
							BREAK
							CASE "D30"
								CALL SPINE_SCARICO_D30_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO , $SPINE_DIFFER)
							BREAK
							CASE "D40"
								CALL SPINE_SCARICO_D40_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO , $SPINE_DIFFER)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				//Hole Feature Set
				CASE "SPINONE_SCARICO"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 6
								IF NOT $D6_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D6")
								}
								$D6_INDEX = $D6_INDEX + 1
								CALL SPINONE_SCARICO_D6_FEATURE($SETNAME , $COMPONENTNAME , $D6_INDEX)
							BREAK
							CASE 8
								IF NOT $D8_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D8")
								}
								$D8_INDEX = $D8_INDEX + 1
								CALL SPINONE_SCARICO_D8_FEATURE($SETNAME , $COMPONENTNAME , $D8_INDEX)
							BREAK
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SPINONE_SCARICO_D10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SPINONE_SCARICO_D12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL SPINONE_SCARICO_D14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SPINONE_SCARICO_D16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SPINONE_SCARICO_D20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SPINONE_SCARICO_D24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SPINONE_SCARICO_D30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 40
								IF NOT $D40_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D40")
								}
								$D40_INDEX = $D40_INDEX + 1
								CALL SPINONE_SCARICO_D40_FEATURE($SETNAME , $COMPONENTNAME , $D40_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D6"
								CALL SPINONE_SCARICO_D6_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D8"
								CALL SPINONE_SCARICO_D8_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D10"
								CALL SPINONE_SCARICO_D10_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D12"
								CALL SPINONE_SCARICO_D12_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D14"
								CALL SPINONE_SCARICO_D14_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D16"
								CALL SPINONE_SCARICO_D16_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D20"
								CALL SPINONE_SCARICO_D20_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D24"
								CALL SPINONE_SCARICO_D24_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D30"
								CALL SPINONE_SCARICO_D30_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D40"
								CALL SPINONE_SCARICO_D40_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				//Hole Feature Set
				CASE "VITI_SCARICO"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL VITI_SCARICO_M10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL VITI_SCARICO_M12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL VITI_SCARICO_M16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL VITI_SCARICO_M20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL VITI_SCARICO_M24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL VITI_SCARICO_M30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL VITI_SCARICO_12IN_FEATURE($SETNAME , $COMPONENTNAME , $D12IN_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL VITI_SCARICO_58IN_FEATURE($SETNAME , $COMPONENTNAME , $D58IN_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL VITI_SCARICO_34IN_FEATURE($SETNAME , $COMPONENTNAME , $D37IN_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL VITI_SCARICO_78IN_FEATURE($SETNAME , $COMPONENTNAME , $D78IN_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL VITI_SCARICO_1IN_FEATURE($SETNAME , $COMPONENTNAME , $D1IN_INDEX , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $PIANA_FIRST , $ALLARGATORE_FIRST)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL VITI_SCARICO_D10_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D12"
								CALL VITI_SCARICO_D12_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D16"
								CALL VITI_SCARICO_D16_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D20"
								CALL VITI_SCARICO_D20_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D24"
								CALL VITI_SCARICO_D24_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D30"
								CALL VITI_SCARICO_D30_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D40"
								CALL VITI_SCARICO_D40_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D12IN"
								CALL VITI_SCARICO_D12IN_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D58IN"
								CALL VITI_SCARICO_D58IN_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D34IN"
								CALL VITI_SCARICO_D34IN_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D78IN"
								CALL VITI_SCARICO_D78IN_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							CASE "D1IN"
								CALL VITI_SCARICO_D1IN_TEMPLATE($SETNAME , $COMPANY , $PORTHOLE , $FLAT , $TWOPARTS , $THREEPARTS , $ALLARGATORE_FIRST , $PIANA_FIRST  , $MATRICE , $PIANA , $COLLARINO_CAMERA , $COLLARINO_SCARICO  , $MANUAL_ALLIGN , $SPINE_ALLIGN , $MATRICEHEIGHT , $WP_SCARICO)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				//Hole Feature Set
				CASE "ESTRATTORE_SCARICO"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL ESTRATTORE_SCARICO_M10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL ESTRATTORE_SCARICO_M12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL ESTRATTORE_SCARICO_M14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL ESTRATTORE_SCARICO_M16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL ESTRATTORE_SCARICO_M20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL ESTRATTORE_SCARICO_M24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL ESTRATTORE_SCARICO_M30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL ESTRATTORE_SCARICO_12IN_FEATURE($SETNAME , $COMPONENTNAME , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL ESTRATTORE_SCARICO_58IN_FEATURE($SETNAME , $COMPONENTNAME , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL ESTRATTORE_SCARICO_34IN_FEATURE($SETNAME , $COMPONENTNAME , $D37IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL ESTRATTORE_SCARICO_78IN_FEATURE($SETNAME , $COMPONENTNAME , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL ESTRATTORE_SCARICO_1IN_FEATURE($SETNAME , $COMPONENTNAME , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL ESTRATTORE_SCARICO_D10_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D12"
								CALL ESTRATTORE_SCARICO_D12_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D14"
								CALL ESTRATTORE_SCARICO_D14_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D16"
								CALL ESTRATTORE_SCARICO_D16_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D20"
								CALL ESTRATTORE_SCARICO_D20_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D24"
								CALL ESTRATTORE_SCARICO_D24_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D30"
								CALL ESTRATTORE_SCARICO_D30_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D40"
								CALL ESTRATTORE_SCARICO_D40_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D12IN"
								CALL ESTRATTORE_SCARICO_D12IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D58IN"
								CALL ESTRATTORE_SCARICO_D58IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D34IN"
								CALL ESTRATTORE_SCARICO_D34IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D78IN"
								CALL ESTRATTORE_SCARICO_D78IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							CASE "D1IN"
								CALL ESTRATTORE_SCARICO_D1IN_TEMPLATE($SETNAME , $COMPANY , $MATRICE , $PIANA , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_SCARICO)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				//Hole Feature Set
				CASE "SOLLEVATORE_SCARICO"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SOLLEVATORE_SCARICO_M10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SOLLEVATORE_SCARICO_M12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SOLLEVATORE_SCARICO_M16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SOLLEVATORE_SCARICO_M20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SOLLEVATORE_SCARICO_M24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SOLLEVATORE_SCARICO_M30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL SOLLEVATORE_SCARICO_12IN_FEATURE($SETNAME , $COMPONENTNAME , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL SOLLEVATORE_SCARICO_58IN_FEATURE($SETNAME , $COMPONENTNAME , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL SOLLEVATORE_SCARICO_34IN_FEATURE($SETNAME , $COMPONENTNAME , $D37IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL SOLLEVATORE_SCARICO_78IN_FEATURE($SETNAME , $COMPONENTNAME , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL SOLLEVATORE_SCARICO_1IN_FEATURE($SETNAME , $COMPONENTNAME , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL SOLLEVATORE_SCARICO_D10_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							CASE "D12"
								CALL SOLLEVATORE_SCARICO_D12_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							CASE "D16"
								CALL SOLLEVATORE_SCARICO_D16_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							CASE "D20"
								CALL SOLLEVATORE_SCARICO_D20_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							CASE "D24"
								CALL SOLLEVATORE_SCARICO_D24_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							CASE "D30"
								CALL SOLLEVATORE_SCARICO_D30_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							CASE "D40"
								CALL SOLLEVATORE_SCARICO_D40_TEMPLATE($SETNAME , $COMPANY , $WP_CAMERA)
							BREAK
							CASE "D12IN"
								CALL SOLLEVATORE_SCARICO_D12IN_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							CASE "D58IN"
								CALL SOLLEVATORE_SCARICO_D58IN_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							CASE "D34IN"
								CALL SOLLEVATORE_SCARICO_D34IN_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							CASE "D78IN"
								CALL SOLLEVATORE_SCARICO_D78IN_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							CASE "D1IN"
								CALL SOLLEVATORE_SCARICO_D1IN_TEMPLATE($SETNAME , $COMPANY , $WP_SCARICO)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				DEFAULT			
				BREAK
			}
			//If the Hole Feature Set got components then give them the right struct
			//The Switch statement checks only for terzapiastra and sottomatrice
		} ELSEIF $TERZAPIASTRA OR $SOTTOMATRICE {
			SWITCH $SETNAME {
				CASE "SPINE_IMPRONTA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SPINE_IMPRONTA_D10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SPINE_IMPRONTA_D12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL SPINE_IMPRONTA_D14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SPINE_IMPRONTA_D16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SPINE_IMPRONTA_D20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SPINE_IMPRONTA_D24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SPINE_IMPRONTA_D30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 40
								IF NOT $D40_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D40")
								}
								$D40_INDEX = $D40_INDEX + 1
								CALL SPINE_IMPRONTA_D40_FEATURE($SETNAME , $COMPONENTNAME , $D40_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL SPINE_IMPRONTA_D10_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D12"
								CALL SPINE_IMPRONTA_D12_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D14"
								CALL SPINE_IMPRONTA_D14_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D16"
								CALL SPINE_IMPRONTA_D16_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D20"
								CALL SPINE_IMPRONTA_D20_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D24"
								CALL SPINE_IMPRONTA_D24_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D30"
								CALL SPINE_IMPRONTA_D30_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D40"
								CALL SPINE_IMPRONTA_D40_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "SPINONE_IMPRONTA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 6
								IF NOT $D6_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D6")
								}
								$D6_INDEX = $D6_INDEX + 1
								CALL SPINONE_IMPRONTA_D6_FEATURE($SETNAME , $COMPONENTNAME , $D6_INDEX)
							BREAK
							CASE 8
								IF NOT $D8_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D8")
								}
								$D8_INDEX = $D8_INDEX + 1
								CALL SPINONE_IMPRONTA_D8_FEATURE($SETNAME , $COMPONENTNAME , $D8_INDEX)
							BREAK
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SPINONE_IMPRONTA_D10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SPINONE_IMPRONTA_D12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL SPINONE_IMPRONTA_D14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SPINONE_IMPRONTA_D16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SPINONE_IMPRONTA_D20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SPINONE_IMPRONTA_D24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SPINONE_IMPRONTA_D30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 40
								IF NOT $D40_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D40")
								}
								$D40_INDEX = $D40_INDEX + 1
								CALL SPINONE_IMPRONTA_D40_FEATURE($SETNAME , $COMPONENTNAME , $D40_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL SPINONE_IMPRONTA_D10_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D12"
								CALL SPINONE_IMPRONTA_D12_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D14"
								CALL SPINONE_IMPRONTA_D14_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D16"
								CALL SPINONE_IMPRONTA_D16_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D20"
								CALL SPINONE_IMPRONTA_D20_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D24"
								CALL SPINONE_IMPRONTA_D24_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D30"
								CALL SPINONE_IMPRONTA_D30_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D40"
								CALL SPINONE_IMPRONTA_D40_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "VITI_IMPRONTA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL VITI_IMPRONTA_M10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL VITI_IMPRONTA_M12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL VITI_IMPRONTA_M16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL VITI_IMPRONTA_M20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL VITI_IMPRONTA_M24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL VITI_IMPRONTA_M30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL VITI_IMPRONTA_12IN_FEATURE($SETNAME , $COMPONENTNAME , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL VITI_IMPRONTA_58IN_FEATURE($SETNAME , $COMPONENTNAME , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL VITI_IMPRONTA_34IN_FEATURE($SETNAME , $COMPONENTNAME , $D37IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL VITI_IMPRONTA_78IN_FEATURE($SETNAME , $COMPONENTNAME , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL VITI_IMPRONTA_1IN_FEATURE($SETNAME , $COMPONENTNAME , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL VITI_IMPRONTA_D10_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D12"
								CALL VITI_IMPRONTA_D12_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D16"
								CALL VITI_IMPRONTA_D16_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D20"
								CALL VITI_IMPRONTA_D20_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D24"
								CALL VITI_IMPRONTA_D24_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D30"
								CALL VITI_IMPRONTA_D30_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D40"
								CALL VITI_IMPRONTA_D40_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D12IN"
								CALL VITI_IMPRONTA_D12IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D58IN"
								CALL VITI_IMPRONTA_D58IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D34IN"
								CALL VITI_IMPRONTA_D34IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D78IN"
								CALL VITI_IMPRONTA_D78IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D1IN"
								CALL VITI_IMPRONTA_D1IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "ESTRATTORE_IMPRONTA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_M10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_M12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_M14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_M16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_M20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_M24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_M30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_12IN_FEATURE($SETNAME , $COMPONENTNAME , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_58IN_FEATURE($SETNAME , $COMPONENTNAME , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_34IN_FEATURE($SETNAME , $COMPONENTNAME , $D37IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_78IN_FEATURE($SETNAME , $COMPONENTNAME , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL ESTRATTORE_IMPRONTA_1IN_FEATURE($SETNAME , $COMPONENTNAME , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL ESTRATTORE_IMPRONTA_D10_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D12"
								CALL ESTRATTORE_IMPRONTA_D12_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D14"
								CALL ESTRATTORE_IMPRONTA_D14_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D16"
								CALL ESTRATTORE_IMPRONTA_D16_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D20"
								CALL ESTRATTORE_IMPRONTA_D20_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D24"
								CALL ESTRATTORE_IMPRONTA_D24_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D30"
								CALL ESTRATTORE_IMPRONTA_D30_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D40"
								CALL ESTRATTORE_IMPRONTA_D40_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D12IN"
								CALL ESTRATTORE_IMPRONTA_D12IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D58IN"
								CALL ESTRATTORE_IMPRONTA_D58IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D34IN"
								CALL ESTRATTORE_IMPRONTA_D34IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D78IN"
								CALL ESTRATTORE_IMPRONTA_D78IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							CASE "D1IN"
								CALL ESTRATTORE_IMPRONTA_D1IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "SPINE_USCITA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SPINE_USCITA_D10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SPINE_USCITA_D12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL SPINE_USCITA_D14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SPINE_USCITA_D16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SPINE_USCITA_D20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SPINE_USCITA_D24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SPINE_USCITA_D30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 40
								IF NOT $D40_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D40")
								}
								$D40_INDEX = $D40_INDEX + 1
								CALL SPINE_USCITA_D40_FEATURE($SETNAME , $COMPONENTNAME , $D40_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL SPINE_USCITA_D10_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D12"
								CALL SPINE_USCITA_D12_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D14"
								CALL SPINE_USCITA_D14_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D16"
								CALL SPINE_USCITA_D16_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D20"
								CALL SPINE_USCITA_D20_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D24"
								CALL SPINE_USCITA_D24_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D30"
								CALL SPINE_USCITA_D30_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D40"
								CALL SPINE_USCITA_D40_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "SPINONE_USCITA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 6
								IF NOT $D6_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D6")
								}
								$D6_INDEX = $D6_INDEX + 1
								CALL SPINONE_USCITA_D6_FEATURE($SETNAME , $COMPONENTNAME , $D6_INDEX)
							BREAK
							CASE 8
								IF NOT $D8_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D8")
								}
								$D8_INDEX = $D8_INDEX + 1
								CALL SPINONE_USCITA_D8_FEATURE($SETNAME , $COMPONENTNAME , $D8_INDEX)
							BREAK
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SPINONE_USCITA_D10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SPINONE_USCITA_D12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL SPINONE_USCITA_D14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SPINONE_USCITA_D16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SPINONE_USCITA_D20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SPINONE_USCITA_D24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SPINONE_USCITA_D30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 40
								IF NOT $D40_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D40")
								}
								$D40_INDEX = $D40_INDEX + 1
								CALL SPINONE_USCITA_D40_FEATURE($SETNAME , $COMPONENTNAME , $D40_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL SPINONE_USCITA_D10_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D12"
								CALL SPINONE_USCITA_D12_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D14"
								CALL SPINONE_USCITA_D14_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D16"
								CALL SPINONE_USCITA_D16_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D20"
								CALL SPINONE_USCITA_D20_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D24"
								CALL SPINONE_USCITA_D24_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D30"
								CALL SPINONE_USCITA_D30_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D40"
								CALL SPINONE_USCITA_D40_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "VITI_USCITA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL VITI_USCITA_M10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL VITI_USCITA_M12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL VITI_USCITA_M16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL VITI_USCITA_M20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL VITI_USCITA_M24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL VITI_USCITA_M30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL VITI_USCITA_12IN_FEATURE($SETNAME , $COMPONENTNAME , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL VITI_USCITA_58IN_FEATURE($SETNAME , $COMPONENTNAME , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL VITI_USCITA_34IN_FEATURE($SETNAME , $COMPONENTNAME , $D37IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL VITI_USCITA_78IN_FEATURE($SETNAME , $COMPONENTNAME , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL VITI_USCITA_1IN_FEATURE($SETNAME , $COMPONENTNAME , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL VITI_USCITA_D10_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D12"
								CALL VITI_USCITA_D12_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D16"
								CALL VITI_USCITA_D16_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D20"
								CALL VITI_USCITA_D20_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D24"
								CALL VITI_USCITA_D24_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D30"
								CALL VITI_USCITA_D30_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D40"
								CALL VITI_USCITA_D40_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_CAMERA)
							BREAK
							CASE "D12IN"
								CALL VITI_USCITA_D12IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D58IN"
								CALL VITI_USCITA_D58IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D34IN"
								CALL VITI_USCITA_D34IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D78IN"
								CALL VITI_USCITA_D78IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D1IN"
								CALL VITI_USCITA_D1IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "ESTRATTORE_USCITA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL ESTRATTORE_USCITA_M10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL ESTRATTORE_USCITA_M12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 14
								IF NOT $D14_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D14")
								}
								$D14_INDEX = $D14_INDEX + 1
								CALL ESTRATTORE_USCITA_M14_FEATURE($SETNAME , $COMPONENTNAME , $D14_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL ESTRATTORE_USCITA_M16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL ESTRATTORE_USCITA_M20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL ESTRATTORE_USCITA_M24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL ESTRATTORE_USCITA_M30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL ESTRATTORE_USCITA_12IN_FEATURE($SETNAME , $COMPONENTNAME , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL ESTRATTORE_USCITA_58IN_FEATURE($SETNAME , $COMPONENTNAME , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL ESTRATTORE_USCITA_34IN_FEATURE($SETNAME , $COMPONENTNAME , $D37IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL ESTRATTORE_USCITA_78IN_FEATURE($SETNAME , $COMPONENTNAME , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL ESTRATTORE_USCITA_1IN_FEATURE($SETNAME , $COMPONENTNAME , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL ESTRATTORE_USCITA_D10_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D12"
								CALL ESTRATTORE_USCITA_D12_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D14"
								CALL ESTRATTORE_USCITA_D14_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D16"
								CALL ESTRATTORE_USCITA_D16_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D20"
								CALL ESTRATTORE_USCITA_D20_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D24"
								CALL ESTRATTORE_USCITA_D24_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D30"
								CALL ESTRATTORE_USCITA_D30_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D40"
								CALL ESTRATTORE_USCITA_D40_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D12IN"
								CALL ESTRATTORE_USCITA_D12IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D58IN"
								CALL ESTRATTORE_USCITA_D58IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D34IN"
								CALL ESTRATTORE_USCITA_D34IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D78IN"
								CALL ESTRATTORE_USCITA_D78IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D1IN"
								CALL ESTRATTORE_USCITA_D1IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				CASE "SOLLEVATORE_USCITA"
					//Loop on Hole Feature Set Components
					//Build the set depending on the size of the hole
					//Also add all the found sizes on a list to let the program know which toolpaths to call
					FOREACH COMPONENT IN COMPONENTS(ENTITY('Featureset' , $SETNAME)) {
						$COMPONENTNAME = COMPONENT.NAME
						$COMPONENTDIAMETER = COMPONENT.DIAMETER
						SWITCH $COMPONENTDIAMETER {
							CASE 10
								IF NOT $D10_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D10")
								}
								$D10_INDEX = $D10_INDEX + 1
								CALL SOLLEVATORE_USCITA_M10_FEATURE($SETNAME , $COMPONENTNAME , $D10_INDEX)
							BREAK
							CASE 12
								IF NOT $D12_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12")
								}
								$D12_INDEX = $D12_INDEX + 1
								CALL SOLLEVATORE_USCITA_M12_FEATURE($SETNAME , $COMPONENTNAME , $D12_INDEX)
							BREAK
							CASE 16
								IF NOT $D16_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D16")
								}
								$D16_INDEX = $D16_INDEX + 1
								CALL SOLLEVATORE_USCITA_M16_FEATURE($SETNAME , $COMPONENTNAME , $D16_INDEX)
							BREAK
							CASE 20
								IF NOT $D20_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D20")
								}
								$D20_INDEX = $D20_INDEX + 1
								CALL SOLLEVATORE_USCITA_M20_FEATURE($SETNAME , $COMPONENTNAME , $D20_INDEX)
							BREAK
							CASE 24
								IF NOT $D24_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D24")
								}
								$D24_INDEX = $D24_INDEX + 1
								CALL SOLLEVATORE_USCITA_M24_FEATURE($SETNAME , $COMPONENTNAME , $D24_INDEX)
							BREAK
							CASE 30
								IF NOT $D30_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D30")
								}
								$D30_INDEX = $D30_INDEX + 1
								CALL SOLLEVATORE_USCITA_M30_FEATURE($SETNAME , $COMPONENTNAME , $D30_INDEX)
							BREAK
							CASE 12,7
								IF NOT $D12IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D12IN")
								}
								$D12IN_INDEX = $D12IN_INDEX + 1
								CALL SOLLEVATORE_USCITA_12IN_FEATURE($SETNAME , $COMPONENTNAME , $D12IN_INDEX)
							BREAK
							CASE 15,875
								IF NOT $D58IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D58IN")
								}
								$D58IN_INDEX = $D58IN_INDEX + 1
								CALL SOLLEVATORE_USCITA_58IN_FEATURE($SETNAME , $COMPONENTNAME , $D58IN_INDEX)
							BREAK
							CASE 19,05
								IF NOT $D34IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D34IN")
								}
								$D34IN_INDEX = $D34IN_INDEX + 1
								CALL SOLLEVATORE_USCITA_34IN_FEATURE($SETNAME , $COMPONENTNAME , $D37IN_INDEX)
							BREAK
							CASE 22,225
								IF NOT $D78IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D78IN")
								}
								$D78IN_INDEX = $D78IN_INDEX + 1
								CALL SOLLEVATORE_USCITA_78IN_FEATURE($SETNAME , $COMPONENTNAME , $D78IN_INDEX)
							BREAK
							CASE 25,4
								IF NOT $D1IN_INDEX {
									INT $ADDSIZE = ADD_LAST($SIZES,"D1IN")
								}
								$D1IN_INDEX = $D1IN_INDEX + 1
								CALL SOLLEVATORE_USCITA_1IN_FEATURE($SETNAME , $COMPONENTNAME , $D1IN_INDEX)
							BREAK
							DEFAULT
							BREAK
						}
					}
					DEACTIVATE Featureset
					FOREACH SIZE IN $SIZES {
						SWITCH SIZE {
							CASE "D10"
								CALL SOLLEVATORE_USCITA_D10_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D12"
								CALL SOLLEVATORE_USCITA_D12_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D16"
								CALL SOLLEVATORE_USCITA_D16_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D20"
								CALL SOLLEVATORE_USCITA_D20_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D24"
								CALL SOLLEVATORE_USCITA_D24_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D30"
								CALL SOLLEVATORE_USCITA_D30_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D40"
								CALL SOLLEVATORE_USCITA_D40_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_CAMERA)
							BREAK
							CASE "D12IN"
								CALL SOLLEVATORE_USCITA_D12IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D58IN"
								CALL SOLLEVATORE_USCITA_D58IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D34IN"
								CALL SOLLEVATORE_USCITA_D34IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D78IN"
								CALL SOLLEVATORE_USCITA_D78IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							CASE "D1IN"
								CALL SOLLEVATORE_USCITA_D1IN_TEMPLATE($SETNAME , $COMPANY , $TERZAPIASTRA , $SOTTOMATRICE , $MANUAL_ALLIGN , $SPINE_ALLIGN , $WP_USCITA)
							BREAK
							DEFAULT
							BREAK
						}
					}
				BREAK
				DEFAULT			
				BREAK
			}
		} ELSE {
			CONTINUE
		}
	}

}

//Include Functions
INCLUDE "V:\3D\GitHub\Alumat\Powermill\Macros\General\Drilling\Centrino.inc"
INCLUDE "V:\3D\GitHub\Alumat\Powermill\Macros\General\Drilling\Layers.inc"
INCLUDE "V:\3D\GitHub\Alumat\Powermill\Macros\General\Drilling\Features.inc"
INCLUDE "V:\3D\GitHub\Alumat\Powermill\Macros\General\Drilling\Templates.inc"
INCLUDE "V:\3D\GitHub\Matrex\Powermill\Tools\ToolsForDrilling.inc"
INCLUDE "V:\3D\GitHub\Alumat\Powermill\Tools\ToolsForDrilling.inc"


